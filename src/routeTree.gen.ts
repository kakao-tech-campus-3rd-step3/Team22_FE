/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as WalkTimeSettingRouteImport } from './routes/walk-time-setting'
import { Route as MapSetupRouteImport } from './routes/map-setup'
import { Route as LocationSettingRouteImport } from './routes/location-setting'
import { Route as AddNewPetRouteImport } from './routes/add-new-pet'

const WalkTimeSettingRoute = WalkTimeSettingRouteImport.update({
  id: '/walk-time-setting',
  path: '/walk-time-setting',
  getParentRoute: () => rootRouteImport,
} as any)
const MapSetupRoute = MapSetupRouteImport.update({
  id: '/map-setup',
  path: '/map-setup',
  getParentRoute: () => rootRouteImport,
} as any)
const LocationSettingRoute = LocationSettingRouteImport.update({
  id: '/location-setting',
  path: '/location-setting',
  getParentRoute: () => rootRouteImport,
} as any)
const AddNewPetRoute = AddNewPetRouteImport.update({
  id: '/add-new-pet',
  path: '/add-new-pet',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/add-new-pet': typeof AddNewPetRoute
  '/location-setting': typeof LocationSettingRoute
  '/map-setup': typeof MapSetupRoute
  '/walk-time-setting': typeof WalkTimeSettingRoute
}
export interface FileRoutesByTo {
  '/add-new-pet': typeof AddNewPetRoute
  '/location-setting': typeof LocationSettingRoute
  '/map-setup': typeof MapSetupRoute
  '/walk-time-setting': typeof WalkTimeSettingRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/add-new-pet': typeof AddNewPetRoute
  '/location-setting': typeof LocationSettingRoute
  '/map-setup': typeof MapSetupRoute
  '/walk-time-setting': typeof WalkTimeSettingRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/add-new-pet'
    | '/location-setting'
    | '/map-setup'
    | '/walk-time-setting'
  fileRoutesByTo: FileRoutesByTo
  to: '/add-new-pet' | '/location-setting' | '/map-setup' | '/walk-time-setting'
  id:
    | '__root__'
    | '/add-new-pet'
    | '/location-setting'
    | '/map-setup'
    | '/walk-time-setting'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  AddNewPetRoute: typeof AddNewPetRoute
  LocationSettingRoute: typeof LocationSettingRoute
  MapSetupRoute: typeof MapSetupRoute
  WalkTimeSettingRoute: typeof WalkTimeSettingRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/walk-time-setting': {
      id: '/walk-time-setting'
      path: '/walk-time-setting'
      fullPath: '/walk-time-setting'
      preLoaderRoute: typeof WalkTimeSettingRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/map-setup': {
      id: '/map-setup'
      path: '/map-setup'
      fullPath: '/map-setup'
      preLoaderRoute: typeof MapSetupRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/location-setting': {
      id: '/location-setting'
      path: '/location-setting'
      fullPath: '/location-setting'
      preLoaderRoute: typeof LocationSettingRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/add-new-pet': {
      id: '/add-new-pet'
      path: '/add-new-pet'
      fullPath: '/add-new-pet'
      preLoaderRoute: typeof AddNewPetRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  AddNewPetRoute: AddNewPetRoute,
  LocationSettingRoute: LocationSettingRoute,
  MapSetupRoute: MapSetupRoute,
  WalkTimeSettingRoute: WalkTimeSettingRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
